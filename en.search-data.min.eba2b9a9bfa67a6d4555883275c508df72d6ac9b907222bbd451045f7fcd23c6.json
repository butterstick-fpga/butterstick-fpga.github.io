[{"id":0,"href":"/r1d0/downloads/","title":"Downloads","section":"Introduction","content":"Downloads  KiCad Sources OrangeCrab GitHub Repository\nBoard 2D Renders      Other   Interactive HTML Bill Of Materials\n  Schematic (PDF)\n  Board CAD model (STEP)\n  Production Gerbers (ZIP)\n  "},{"id":1,"href":"/r1d0/getting-started/","title":"Getting Started","section":"Introduction","content":"Getting Started First time using an FPGA? This guide should cover everything you need to get the example verilog project built and loaded up on the ButterStick.\nStep 1: Toolchain Setup  This guide will make use of the Open Source FPGA toolchain. It is possible to build and install these from scratch, but the whole process takes around 30 minutes, and can be a bit tricky if you\u0026rsquo;re just getting started.\nIt\u0026rsquo;s advised to use an automated build from YosysHQ/oss-cad-suite-build\n Grab the latest build for your platform, extract them somewhere on your PC, and add the oss-cad-suite\\bin folder to your path:\n - MacOS: export PATH=[path-to-bin]:$PATH - Linux: export PATH=[path-to-bin]:$PATH - Windows Powershell: $ENV:PATH = \u0026quot;[path-to-bin];\u0026quot; + $ENV:PATH - Windows cmd.exe: PATH=[path-to-bin];%PATH% Check that they\u0026rsquo;ve been correctly installed by running:\n$ yosys -V Yosys 0.9+2406 (open-tool-forge build) (git sha1 c0bcbe1f, gcc 9.3.0-10ubuntu2 -Os) $ nextpnr-ecp5 -V nextpnr-ecp5 -- Next Generation Place and Route (Version nightly-20200707)  Note: The above steps only set the PATH variable for the current terminal session. Depending on your platform there are options to ensure the tools are kept in your path.\n  On linux based systems you may also need to add a udev rule to enable user access to the usb device, once added you\u0026rsquo;ll need to un-plug and reconnect the ButterStick for it to take effect.\nTo access the bootloader hold down btn0 while connecting USB.\n$ cat /etc/udev/rules.d/10-butterstick-dfu.rules ATTRS{idVendor}==\u0026#34;1209\u0026#34;, ATTRS{idProduct}==\u0026#34;5af1\u0026#34;, MODE=\u0026#34;0666\u0026#34;, GROUP=\u0026#34;plugdev\u0026#34;, TAG+=\u0026#34;uaccess\u0026#34; Step 2: Verilog Example  Download the example repository. We\u0026rsquo;ll build the blink example to test that everything is working correctly.\n$ git clone https://github.com/butterstick-fpga/verilog-examples butterstick-verilog-examples $ cd butterstick-verilog-examples/blink $ make ... snip ... Info: [ 66877, 69425) | Info: [ 69425, 71973) | Info: [ 71973, 74521) | Info: [ 74521, 77069) |*** Info: [ 77069, 79617) |** Info: [ 79617, 82165) |***** Info: Program finished normally. ecppack --compress --freq 38.8 --input blink_out.config --bit blink.bit cp -a blink.bit blink.dfu dfu-suffix -v 1209 -p 5af1 -a blink.dfu dfu-suffix (dfu-util) 0.9 Copyright 2011-2012 Stefan Schmidt, 2013-2014 Tormod Volden This program is Free Software and has ABSOLUTELY NO WARRANTY Please report bugs to http://sourceforge.net/p/dfu-util/tickets/ Suffix successfully added to file rm blink.json blink.bit blink_out.config ðŸ¥³ Congratulations you\u0026rsquo;ve successfully compiled gateware for the ECP5 using yosys + nextpnr! ðŸ¥³\nStep 3: Verilog Example  Next, while holding the button on the ButterStick, plug it in. This enters the bootloader and enables you to upload new gateware. The LED should be smoothly pulsing to show the device is in bootloader mode.\n$ make dfu dfu-util --alt 0 --download blink.dfu --reset dfu-util 0.9 Copyright 2005-2009 Weston Schmidt, Harald Welte and OpenMoko Inc. Copyright 2010-2016 Tormod Volden and Stefan Schmidt This program is Free Software and has ABSOLUTELY NO WARRANTY Please report bugs to http://sourceforge.net/p/dfu-util/tickets/ Match vendor ID from file: 1209 Match product ID from file: 5af1 Opening DFU capable USB device... ID 1209:5af1 Run-time device DFU version 0101 Claiming USB DFU Interface... Setting Alternate Setting #0 ... Determining device status: state = dfuIDLE, status = 0 dfuIDLE, continuing DFU mode device DFU version 0101 Device returned transfer size 512 Copying data from PC to DFU device Download\t[=========================] 100% 280788 bytes Download done. state(7) = dfuMANIFEST, status(0) = No error condition is present state(2) = dfuIDLE, status(0) = No error condition is present Done! Resetting USB to switch back to runtime mode You should now see the LEDs blinking through colours!\nðŸ¥³ Congratulations you\u0026rsquo;ve successfully loaded this gateware onto the ECP5 on the ButterStick!\n"},{"id":2,"href":"/r1d0/overview/","title":"Overview","section":"Introduction","content":"Overview The OrangeCrab is a small pocket sized development board in the Adafruit feather format. While small in size it packs a punch! The standard version is equiped with a Lattice ECP5 FPGA, and DDR3L memory. Paired with the FPGA is a FLASH chip, with enough memory to store multiple bitstreams.\nFPGA The FPGA used on the OrangeCrab is an ECP5 from Lattice Semiconductor. The ECP5 series is a medium tier, low power, low cost FPGA product line. This device supports various DDR3 memory interfaces, because of this the board features DDR3L memory. The ECP5 is also one of the platforms that is fully supported by the Open Source Synthesis flow.\nDDR3 There is DDR3L memory attached to the FPGA. The hardware is configured by default for DDR3L (1.35V). There are enough address lines wired to the memory to support upto 8Gbit parts. (Twin-die is not supported) The standard OrangeCrab configulation makes use of 1Gbit. This is connected to the FPGA using a 16-bit data bus.\nUSB The micro usb connector is wired directly into the FPGA. Just as a microprocessor can emulate UART or SPI using standard I/O pins the FPGA can do the same for USB. By using some of the FPGA logic to create a USB core, we can use the I/O pins on the FPGA to act as a USB device. This will operate at USB 2.0 full-speed rates (12Mbit/s). Operating at High Speed rates (480Mbit/s) is not possible with the OrangeCrab hardware.\n"},{"id":3,"href":"/r1d0/pinout/","title":"Pinout","section":"Introduction","content":"Pinout  Click for larger version\n"}]